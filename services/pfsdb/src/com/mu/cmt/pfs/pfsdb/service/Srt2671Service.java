/*Copyright (c) 2016-2017 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import com.mu.cmt.pfs.pfsdb.Srt2671;
import com.mu.cmt.pfs.pfsdb.Srt2671Id;

/**
 * Service object for domain model class {@link Srt2671}.
 */
public interface Srt2671Service {

    /**
     * Creates a new Srt2671. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on Srt2671 if any.
     *
     * @param srt2671 Details of the Srt2671 to be created; value cannot be null.
     * @return The newly created Srt2671.
     */
    Srt2671 create(@Valid Srt2671 srt2671);


	/**
     * Returns Srt2671 by given id if exists.
     *
     * @param srt2671Id The id of the Srt2671 to get; value cannot be null.
     * @return Srt2671 associated with the given srt2671Id.
	 * @throws EntityNotFoundException If no Srt2671 is found.
     */
    Srt2671 getById(Srt2671Id srt2671Id);

    /**
     * Find and return the Srt2671 by given id if exists, returns null otherwise.
     *
     * @param srt2671Id The id of the Srt2671 to get; value cannot be null.
     * @return Srt2671 associated with the given srt2671Id.
     */
    Srt2671 findById(Srt2671Id srt2671Id);

	/**
     * Find and return the list of Srt2671s by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param srt2671Ids The id's of the Srt2671 to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return Srt2671s associated with the given srt2671Ids.
     */
    List<Srt2671> findByMultipleIds(List<Srt2671Id> srt2671Ids, boolean orderedReturn);


    /**
     * Updates the details of an existing Srt2671. It replaces all fields of the existing Srt2671 with the given srt2671.
     *
     * This method overrides the input field values using Server side or database managed properties defined on Srt2671 if any.
     *
     * @param srt2671 The details of the Srt2671 to be updated; value cannot be null.
     * @return The updated Srt2671.
     * @throws EntityNotFoundException if no Srt2671 is found with given input.
     */
    Srt2671 update(@Valid Srt2671 srt2671);

    /**
     * Deletes an existing Srt2671 with the given id.
     *
     * @param srt2671Id The id of the Srt2671 to be deleted; value cannot be null.
     * @return The deleted Srt2671.
     * @throws EntityNotFoundException if no Srt2671 found with the given id.
     */
    Srt2671 delete(Srt2671Id srt2671Id);

    /**
     * Deletes an existing Srt2671 with the given object.
     *
     * @param srt2671 The instance of the Srt2671 to be deleted; value cannot be null.
     */
    void delete(Srt2671 srt2671);

    /**
     * Find all Srt2671s matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching Srt2671s.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<Srt2671> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all Srt2671s matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching Srt2671s.
     *
     * @see Pageable
     * @see Page
     */
    Page<Srt2671> findAll(String query, Pageable pageable);

    /**
     * Exports all Srt2671s matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all Srt2671s matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the Srt2671s in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the Srt2671.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}