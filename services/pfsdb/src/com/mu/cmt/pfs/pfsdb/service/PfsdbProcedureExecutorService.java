/*Copyright (c) 2016-2017 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;
import java.sql.Date;

import com.mu.cmt.pfs.pfsdb.models.procedure.*;

public interface PfsdbProcedureExecutorService {

    Tt640pk0GetMakeupUnitResponse executeTT640pk0_getMakeupUnit();

    Sy2110pk0getCroquisPathResponse executeSY2110PK0GetCroquisPath(String pordnum, String pdsheetno);

    ProcMk1100pk0Mk440getordLoadunldqtyResponse executeProcMK1100PK0_MK440GetordLoadunldqty(String pprgid, String pordnum, String pgmtseq, Integer pclrseqg);

    Mk1100pk0getMenuItemsResponse executeMk1100pk0GetMenuItems(String pordnum, String pmenuModule);

    ProcMk1100pk0GetGmtColourDetailsResponse executeProcMK1100PK0_GetGmtColourDetails(String pprgid, String pordnum, String pgmtseq, Integer pclrseqg);

    ProcMk1100pk0Mk440getjobLoadunldqtyResponse executeProcMK1100PK0_MK440GetjobLoadunldqty(String pprgid, String pordnum, String pgmtseq, Integer pclrseqg, Integer pszeseq);

    QrySy006pk0callRepUrlResponse executeQrySY006pk0CallRepUrl(String preportPath, String pparams, String pdesformat, String pparamForm);

    ProcMk1100pk0Mk570getOrdDetailsResponse executeProcMK1100PK0_MK570GetOrdDetails(String pprgid, String pordnum);

    ProcMk1100pk0Mk570getProdDetailsResponse executeProcMK1100PK0_MK570GetProdDetails(String pprgid, String pordnum);

    Mk1100pk0getOrderDocsUrlResponse executeMk1100pk0GetOrderDocsUrl(String pprgid, String pordnum, String pdsheetno);

    ProcMk1100pk0GetOrt150sizeResponse executeProcMK1100PK0_GetOrt150Size(String pprgid, String pordnum);

    ProcMk1100pk0Mk450jobUnloadperszeResponse executeProcMK1100PK0_MK450JobUnloadpersze(String pprgid, String pordnum, String pgmtseq, Integer pclrseqg);

    ProcMk1100pk0QryMk721prodminsResponse executeProcMK1100PK0_QryMK721Prodmins(String pprgid, String pordnum, String pmaklcn, Date pproddate);

    InputStream executeSR2675PK0GetOrderPattern(String pordnum, String poutFilename, String poutMessage, String pprgid, String pgmtseq);

    ProcMk103pk0ordqryGetOrdcommentResponse executeProcMK103PK0ORDQRY_GetOrdcomment(String pprgid, String pordnum);

    ProcMk1100pk0Mk400jobLoadperszeResponse executeProcMK1100PK0_MK400JobLoadpersze(String pprgid, String pordnum, String pgmtseq, Integer pclrseqg);

    Sr2680pk0checkBeforeDwnldPatternResponse executeSR2680PK0CheckBeforeDwnldPattern(String pordnum, String pgmtseq, String pprgid);

    InputStream executeProcMK103PK0QRYORD_GetOrdgmtImage(String pprgid, String pordnum, String pgmtseq);

    ProcMk1100pk0GetMkupAuditResponse executeProcMK1100PK0_GetMkupAudit(String pprgid, String pordnum, String pdyejob, Date popdateFrom, Date popdateTo);

    ProcMk1100pk0Mk560qryMkrejectsResponse executeProcMK1100PK0_MK560QryMkrejects(String pprgid, String pordnum, String pgmtseq, Integer pclrseqg);

}